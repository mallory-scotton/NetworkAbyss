///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include <Engine/Core/State.hpp>
#include <SFML/Audio.hpp>

///////////////////////////////////////////////////////////////////////////////
// Namespace tkd::States
///////////////////////////////////////////////////////////////////////////////
namespace tkd::States
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Menu : public Base
{
public:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    SPtr<sf::Texture> m_background;
    SPtr<sf::Texture> m_logo;
    SPtr<sf::SoundBuffer> m_buffer;
    sf::Sound m_music;
    sf::Sprite m_sprite;

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    Menu(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    ~Menu();

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void init(void) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param deltaT
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void update(float deltaT) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void render(void) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void onStateChange(void) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void onStateFocus(void) override;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void handleEvent(const sf::Event::KeyPressed& key) override;
};

} // namespace tkd::States
