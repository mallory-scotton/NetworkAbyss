///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Namespace tkd
///////////////////////////////////////////////////////////////////////////////
namespace tkd
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Effect
{
public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    enum class Type
    {
        WeaponDamage,               //<!
        MovementSpeed,              //<!
        RateOfFire,                 //<!
        MaxHealth,                  //<!
        Shields,                    //<!
        JumpHeight,                 //<!
        BulletVelocity,             //<!
        MeleeDamage,                //<!
        CrystalCapacity             //<!
    };

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    enum class StackingBehavior
    {
        Additive,                   //<!
        Multiplicative,             //<!
        Maximum,                    //<!
        Override                    //<!
    };

private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    Type m_type;                    //<!
    StackingBehavior m_behavior;    //<!
    float m_value;                  //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    ///
    /// \brief
    ///
    /// \param type
    /// \param value
    /// \param behavior
    ///
    ///////////////////////////////////////////////////////////////////////////
    Effect(
        Type type,
        float value,
        StackingBehavior behavior = StackingBehavior::Additive
    );

public:
    ///////////////////////////////////////////////////////////////////////////
    ///
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    Type getType(void) const;

    ///////////////////////////////////////////////////////////////////////////
    ///
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    StackingBehavior getStackingBehavior(void) const;

    ///////////////////////////////////////////////////////////////////////////
    ///
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    float getValue(void) const;
};

} // namespace tkd
