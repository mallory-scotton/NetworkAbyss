///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include <Engine/Utils/Types.hpp>
#include <Engine/Resources/AssetsPacker.hpp>
#include <SFML/Audio.hpp>
#include <SFML/Graphics.hpp>

///////////////////////////////////////////////////////////////////////////////
// Namespace tkd
///////////////////////////////////////////////////////////////////////////////
namespace tkd
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class AssetsManager
{
private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    static AssetsManager* m_instance;                   //<!

private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    AssetsPacker m_packer;                              //<!
    UMap<String, SPtr<sf::Image>> m_imageCache;         //<!
    UMap<String, SPtr<sf::Texture>> m_textureCache;     //<!
    UMap<String, SPtr<sf::SoundBuffer>> m_soundCache;   //<!
    UMap<String, SPtr<sf::Font>> m_fontCache;           //<!
    UMap<String, SPtr<Data>> m_dataCache;               //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param assets
    ///
    ///////////////////////////////////////////////////////////////////////////
    AssetsManager(const String& assets = "assets.pak");

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static AssetsManager* getInstance(void);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    SPtr<sf::Image> getImage(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    SPtr<sf::Texture> getTexture(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    SPtr<sf::SoundBuffer> getSound(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    SPtr<sf::Font> getFont(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    SPtr<Data> getData(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool unloadImage(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool unloadTexture(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool unloadSound(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool unloadFont(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool unloadData(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool unloadAsset(const String& key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void clearCache(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    Uint64 getCacheSize(void) const;
};

} // namespace tkd
