///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include <Engine/Utils/Types.hpp>
#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>

///////////////////////////////////////////////////////////////////////////////
// Namespace tkd::States
///////////////////////////////////////////////////////////////////////////////
namespace tkd::States
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Base
{
public:
    sf::RenderWindow* m_window;

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \tparam T
    ///
    /// \param
    ///
    ///////////////////////////////////////////////////////////////////////////
    template <typename T>
    void handlePacket(const T&)
    {}

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param
    ///
    ///////////////////////////////////////////////////////////////////////////
    void handleEvent(const sf::Event::Closed&)
    {
        m_window->close();
    }

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \tparam T
    ///
    /// \param
    ///
    ///////////////////////////////////////////////////////////////////////////
    template <typename T>
    void handleEvent(const T&)
    {}
};

} // namespace tkd::States
