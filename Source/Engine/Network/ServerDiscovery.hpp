///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include <Engine/Utils/Types.hpp>
#include <Engine/Network/Network.hpp>

///////////////////////////////////////////////////////////////////////////////
// Namespace tkd
///////////////////////////////////////////////////////////////////////////////
namespace tkd
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class ServerDiscovery
{
public:
    ///////////////////////////////////////////////////////////////////////////
    // Constant static properties
    ///////////////////////////////////////////////////////////////////////////
    static const Uint16 DISCOVERY_PORT;
    static const String DISCOVERY_MESSAGE;

public:
    ///////////////////////////////////////////////////////////////////////////
    // Type alias
    ///////////////////////////////////////////////////////////////////////////
    using Callback = Function<void(const Address&)>;

private:
    ///////////////////////////////////////////////////////////////////////////
    // Private properties
    ///////////////////////////////////////////////////////////////////////////
    Atomic<bool> m_running;         //<!
    Thread m_thread;                //<!
    Callback m_callback;            //<!
    Uint16 m_port;                  //<!
    Socket m_socket;                //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    ServerDiscovery(Uint16 port = 0);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    ~ServerDiscovery();

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void startBroadcasting(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param callback
    ///
    ///////////////////////////////////////////////////////////////////////////
    void startListening(Callback callback);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void stop(void);
};

} // namespace tkd
